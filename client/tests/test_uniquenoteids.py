# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from base_class import BrowserSetup

class TestUniquenoteids(BrowserSetup):

  # need to inherit setup_method() from BrowserSetup
  # def setup_method(self, method):
  #   self.driver = webdriver.Firefox()
  #   self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def _submit_folder_form(self):
    self.driver.find_element(By.ID, "folderName").send_keys(Keys.ENTER)
    try:
      # some other ways to try and submit the form, since the first way sometimes fails
      self.driver.find_element(By.ID, "folderName").send_keys(Keys.RETURN)
      self.driver.find_element(By.ID, 'folderName').submit()
    except Exception:
      pass

  
  def test_uniquenoteids(self):
    ''' verify that if quickly creating notes in different folders, they have unique IDs '''
    # Test name: unique_note_ids
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://localhost:5173/")
    # 2 | setWindowSize | 1024x768 | 
    self.driver.set_window_size(1024, 768)

    # --------------------
    # create two folders, x & y.
    # 4 | click | css=#newFolderButton > path | 
    self.driver.find_element(By.CSS_SELECTOR, "#newFolderButton > path").click()
    # 5 | type | id=folderName | x
    self.driver.find_element(By.ID, "folderName").send_keys("x")
    # 6 | sendKeys | id=folderName | ${KEY_ENTER}
    self._submit_folder_form()
    time.sleep(0.5)
    # 7 | click | css=#newFolderButton > path | 
    self.driver.find_element(By.CSS_SELECTOR, "#newFolderButton > path").click()
    # 8 | type | id=folderName | y
    self.driver.find_element(By.ID, "folderName").send_keys("y")
    # 9 | sendKeys | id=folderName | ${KEY_ENTER}
    self._submit_folder_form()
    time.sleep(0.5)

    #---------------------------------------
    # quickly create notes in each of 'All Notes' folder, and x folder, and y folder
    # 11 | click | id=title | 
    self.driver.find_element(By.ID, "title").click()
    # 12 | type | id=title | asdf
    self.driver.find_element(By.ID, "title").send_keys("asdf")
    # 13 | click | xpath=//span[contains(.,'x')] | 
    self.driver.find_element(By.XPATH, "//span[contains(.,\'x\')]").click()
    # 14 | type | id=title | asdf
    self.driver.find_element(By.ID, "title").send_keys("asdf")
    # 15 | click | xpath=//span[contains(.,'y')] | 
    self.driver.find_element(By.XPATH, "//span[contains(.,\'y\')]").click()
    # 16 | type | id=title | asdf
    self.driver.find_element(By.ID, "title").send_keys("asdf")
    # 17 | click | xpath=//span[contains(.,'All Notes')] | 
    self.driver.find_element(By.XPATH, "//span[contains(.,\'All Notes\')]").click()
    time.sleep(1)

    # ----------------------------
    # now if they all have the same ID, clicking delete-note-0 will technically delete ALL notes with
    # that ID, so it'll delete all 3 notes, and we can click on the "no notes" icon
    # 18 | click | id=delete-note-0 | 
    self.driver.find_element(By.ID, "delete-note-0").click()
    # 19 | mouseOver | id=delete-note-0 | 
    element = self.driver.find_element(By.ID, "delete-note-0")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 20 | click | css=#empty-state-icon path | 
    no_notes_found = True
    time.sleep(1)
    try:
      # this should give an error. If not, then all 3 notes were deleted
      self.driver.find_element(By.CSS_SELECTOR, "#empty-state-icon path").click()
    except:
      no_notes_found = False  # error means it couldn't find that CSS selector
    if no_notes_found:
      raise ValueError('no notes exist! We only deleted first note, but all 3 were deleted because they shared same ID')
      
  
